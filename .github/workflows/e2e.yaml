name: Build Demo project

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-demo-project:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: balchua/microk8s-actions@v0.2.2
        with:
          channel: 'latest/edge'
          addons: '["dns", "rbac", "registry", "ingress"]'

      - name: Install yq
        run: |
          sudo snap install yq

      - name: Get Skaffold
        env:
          KUBECONFIG: /tmp/config
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && chmod uo+x skaffold && sudo mv skaffold /usr/local/bin
          skaffold version

      - name: Enable Helm addon
        run: |
          sudo snap install helm --classic

      - name: Wait for registry to be up
        run: |
          kubectl -n container-registry wait --for=condition=available --timeout=600s deployment/registry

      - name: Install zipkin
        run: |
          kubectl create ns my-project
          cd zipkin
          skaffold run -p local
          kubectl -n my-project wait --for=condition=available --timeout=600s deployment/zipkin

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build protos
        run: |
          cd protos
          mvn clean install

      - name: Build and install the votes service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd votes
          mvn clean install
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          skaffold run -p votes-db-local
          skaffold run -p local
          kubectl -n my-project wait --for=condition=available --timeout=600s deployment/votes

      - name: Build and install the quotes service
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd quotes
          mvn clean install
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          skaffold run -p quotes-db-local
          skaffold run -p local
          kubectl -n my-project wait --for=condition=available --timeout=600s deployment/quotes

      - name: Build and install the frontend service
        run: |
          cd frontend
          skaffold run -p local
          kubectl -n my-project wait --for=condition=available --timeout=600s deployment/frontend

      - name: Show all
        run: |
          kubectl -n my-project get all -o wide

      - name: Query all quotes
        run: |
          sudo snap install jq
          export CLUSTER_IP=`kubectl -n my-project get svc/frontend -o=jsonpath='{.spec.clusterIP}'`
          curl http://$CLUSTER_IP:9091/api/quote/list | jq '.'

      - name: Cast vote
        run: |
          export CLUSTER_IP=`kubectl -n my-project get svc/frontend -o=jsonpath='{.spec.clusterIP}'`
          curl -X POST http://$CLUSTER_IP:9091/api/vote/castVote?quoteId=5 | grep 'If you cage the beast, the beast will get angry.'

      - name: Cast failing vote
        run: |
          export CLUSTER_IP=`kubectl -n my-project get svc/frontend -o=jsonpath='{.spec.clusterIP}'`
          curl -X POST http://$CLUSTER_IP:9091/api/vote/castVote?quoteId=2 | jq '.error | test("Internal Server Error")' | grep true
