apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: my-project
spec:
  ports:
    - port: 6379
      name: redis
  clusterIP: None
  selector:
    app: redis
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: my-project
type: Opaque
data:
  password: YWRtaW4=
---

apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: redis
  namespace: my-project
spec:
  selector:
    matchLabels:
      app: redis  # has to match .spec.template.metadata.labels
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis  # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: redis
          image: redis:5.0.5-alpine
          imagePullPolicy: Always
          args: ["--requirepass", "$(REDIS_PASS)", "--appendonly", "yes", "--save", "900", "1", "--save", "30", "1"]
          ports:
            - containerPort: 6379
              name: redis
          env:
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: password
          volumeMounts:
            - name: redis-volume
              mountPath: /data
      volumes:
      - name: redis-volume
        emptyDir: {}
